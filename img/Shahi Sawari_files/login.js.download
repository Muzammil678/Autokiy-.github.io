//////////////////////////////// Check the access token on page load and login the user //////////////////////////////////
/**
 * will get and return the query string params
 * @param name
 * @param url
 * @return {*}
 */

getParameterByName = (name, url) => {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, '\\$&');
    let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
};

let logoutKey = getParameterByName('logout');

if(logoutKey!=null)
{
    logoutKey=logoutKey.slice(0,4);
}

if(logoutKey==='true')
{
    document.cookie ='logState='+logoutKey+';';
}

 tokenChecker=()=>{
     let cookie = document.cookie.split(';');
     let tempLogState=false;
     for (let i = 0; i < cookie.length; i++) {

         let chip = cookie[i],
             entry = chip.split("="),
             name = entry[0];
         name =  name.replace(/\s+/g, '');

         if(name==='logState')
         {
             tempLogState=true;
         }
     }

     if (tempLogState === true) {
        logoutMethod();
     }else{
         let tokenFound=false;
         let access_token;
         let cookie = document.cookie.split(';');

         for (let i = 0; i < cookie.length; i++) {

             let chip = cookie[i],
                 entry = chip.split("="),
                 name = entry[0];
             name =  name.replace(/\s+/g, '');

             if(name==='access_token')
             {
                 access_token=entry[1];
                 tokenFound=true;
             }
         }
         if(tokenFound===true)
         {
             if(access_token!=='')
             {
                 $.ajax({
                     method: "POST",
                     url: baseUrl + "monthly_form_login_via_access_token",
                     data: {
                         access_token:access_token
                     },
                     success: function (response) {

                         if (typeof response === "string") {
                             response = JSON.parse(response)
                         }

                         if (response.status === 200) {
                             let name=response.data.user_name;
                             document.cookie ='phone_no='+response.data.phone_no+';';
                             afterLogin(name);
                             let cookie = document.cookie.split(';');
                             let sourceVal;
                             for (let i = 0; i < cookie.length; i++) {

                                 let chip = cookie[i],
                                     entry = chip.split("="),
                                     name = entry[0];
                                 name =  name.replace(/\s+/g, '');
                                 if(name===source.source)
                                 {
                                     sourceVal=entry[1];
                                 }
                             }
                             if(sourceVal===source.fbSource)
                             {
                                 document.getElementById("profileImage").setAttribute("src", "http://graph.facebook.com/" + localStorage.getItem("facebook_user_id")+ "/picture?type=normal");
                                 $("#profileImage").addClass("img-to-show-style");
                             }
                             else if(sourceVal===source.gmSource)
                             {
                                 document.getElementById("profileImage").setAttribute("src", localStorage.getItem("gmail_profile_image"));
                                 $("#profileImage").addClass("img-to-show-style");
                             }
                         }
                         else {
                             logoutMethod();
                         }
                     }, error: function () {

                     }
                 });
             }
             else{
                 logoutMethod();
             }

         }
         else{
             //clear the cookies
             logoutMethod();
         }
     }

};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
let phoneNo;

$('#loginForm').submit(function (e) {
    fbq('track', 'VerifyPhoneNo');
    //////////////////////////////////// Variables Dec and Initializing ///////////////////////////////////
    let updatedNumber;
    phoneNo = $("#phoneInput").val();
    ///////////////////////////////////////////////////////////////////////////////////////////////////////


    if (typeof phoneNo !== 'undefined') {
        if (phoneNo.length === 11) {
            //check the cell no
            document.getElementById('loading').style.display = "block";

            if (phoneNo.charAt(0) === "0" && phoneNo.charAt(1) === "3") {
                updatedNumber = phoneNo.slice(1, 11);
                let phoneNoRegex = /^[0-9]+$/;
                if (updatedNumber.match(phoneNoRegex)) {
                    document.getElementById("phoneInput").style.borderColor = "#359d73";

                    $.ajax({
                        type: 'post',
                        url: baseUrl + "monthly_form_verify_phone",
                        data: {
                            phone_no: "+92" + updatedNumber
                        },
                        success: function (response) {
                            if(typeof response==="string")
                            {
                                response=JSON.parse(response)
                            }
                            document.getElementById('loading').style.display = "none";

                            if (response.status === 200 || response.status === 201) {
                                document.cookie ='phone_no=0'+updatedNumber+';';
                                $("#phRow").hide();
                                $("#otpRow").show();
                                $('#sendAgainOtp').prop('disabled',true);
                          //      selfInvokeFunc();
                            }
                            else if (response.status === 500) {

                                alert('Error status 500');
                            }
                        }, error: function myError(response) {
                            document.getElementById('loading').style.display = "none";
                            alert(`Request Failed due to ${response.statusText}`);
                        }
                    });
                }
                else {
                    document.getElementById('loading').style.display = "none";
                    let msg = "Not a valid Phone Number";
                    showErrorMsg(msg);
                    document.getElementById("phoneInput").style.borderColor = "red";
                    return false;
                }
            }
            else {
                document.getElementById('loading').style.display = "none";
                document.getElementById("phoneInput").style.borderColor = "red";
                let msg = "Invalid format of cell number";
                showErrorMsg(msg);
                return false;
            }
        }
        else {
            let msg = "Invalid format of cell number";
            showErrorMsg(msg);
            document.getElementById("phoneInput").style.borderColor = "red";
            return false;
        }
    }
    else {
        let msg = "Input is Invalid!";
        showErrorMsg(msg);
        document.getElementById("phoneInput").style.borderColor = "red";
        return false;
    }//phone digits countdown verification ends here

    e.preventDefault();
});

//This function will restrict user from entering number more than 11 digits
restrictInput = (evt) => {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode == 38 || charCode == 40) {
        evt.preventDefault();
        return false;
    }
    else if (charCode != 69 && charCode != 45 && charCode != 189 && charCode != 15 && charCode != 43 && charCode != 187 && charCode != 190) {
        let keyword = $("#phoneInput").val();

        if (keyword.length < 11) {
            return true;
        }
        else {
            if (charCode == 8 || charCode == 37 || charCode == 39 || charCode == 116) {
                return true;
            }
            else {
                evt.preventDefault();
            }
        }

    }
    else {
        evt.preventDefault();
        return false;
    }
};


//send the otp and cell number from this function to server for further processing

verifyOtpFunction = () => {
    let otp = $("#otpInput").val();
    if (otp.length === 4) {
        let phoneNoRegex = /^[0-9]+$/;
        if (otp.match(phoneNoRegex)) {
            let verify_otp = otp;
            document.getElementById('loading').style.display = "block";

            $.ajax({
                type: 'post',
                url: baseUrl + "monthly_form_verify_otp",
                data: {
                    phone_no: "+92" + phoneNo.slice(1, 11),
                    otp: verify_otp
                },
                success: function (response) {

                    if(typeof response==="string")
                    {
                        response=JSON.parse(response)
                    }
                    if (response.status === 200) {
                        document.getElementById('loading').style.display = "none";
                      //condition for sign up
                        removeLogoutKey();
                        window.location.href =baseFormUrl+'?access_token='+''+'&state='+true+'&phone_no='+phoneNo+'&'+source.source+'='+source.phSource;
                        fbq('track', 'VerifyOtpOnSignUp');
                    }
                    else if (response.status === 201) {

                        document.getElementById('loading').style.display = "none";
                        let msg = "Not Verified";
                        showErrorMsg(msg);
                        return false;
                    }
                    else if (response.status === 202) {
                        fbq('track', 'VerifyOtpOnSignIn');
                        let accessToken = response.data.access_token;
                        let userName = response.data.user_name;
                        let gender = response.data.gender;
                        let dob = response.data.dob;
                        removeLogoutKey();
                        document.cookie ='user_name='+userName+';';
                        document.cookie ='access_token='+accessToken+';';
                        document.cookie ='gender='+gender+';';
                        document.cookie ='dob='+dob+';';
                        document.cookie=source.source+'='+source.phSource+';';

                        window.location.href =baseFormUrl+'?access_token='+accessToken+'&state='+false+'&phone_no='+phoneNo+'&'+source.source+'='+source.phSource;
                        document.getElementById('loading').style.display = "none";
                    }
                    else if (response.status === 500) {
                        document.getElementById('loading').style.display = "none";
                        alert('Error status 500');
                    }
                }, error: function myError(response) {
                    document.getElementById('loading').style.display = "none";
                    alert(`Request Failed due to ${response.statusText}`);
                }
            });//end of .then function
        }
    }
    else{
        alert("Invalid Otp");
    }
};   /*Here is the code of resent OTP.
    A timeout function to disable resend button for 30-sec interval to stop user for making multiple request for OTP(Spam)
     */
// let countDown=0;
// showInterval=()=>{
//     countDown=30;
//     var interval=setInterval(function(){
//         countDown--;
//         $('#sendAgainOtp').val('Send Again ('+countDown+')');
//         if(countDown===0)
//         {
//             $('#sendAgainOtp').val('Send Again');
//             stopIntervalFunction();
//         }
//
//     },1000, countDown);
//
//     stopIntervalFunction=()=>{
//         clearInterval(interval);
//     }
// };
//
// //this function will disable button on screen load. And its self invoke.
// selfInvokeFunc=()=>{
//     showInterval();
//     setTimeout(function(){
//         $('#sendAgainOtp').prop('disabled',false);
//         countDown=0;
//         }, 30000);
// };
resendOTP=()=>
{
    // showInterval();
    // $('#sendAgainOtp').prop('disabled',true);
    // setTimeout(function(){
    //     $('#sendAgainOtp').prop('disabled',false);
    // }, 30000);

    document.getElementById('loading').style.display="block";
    fbq('track', 'ResendOtp');
    let  cookiesData= document.cookie;
    if(typeof cookiesData==="string")
    {
        cookiesData =   cookiesData.split("=");
    }
    let phoneNumber=cookiesData[1];

    $.ajax({
        type: 'post',
        url: baseUrl + "monthly_form_verify_phone",
        data: {
            phone_no: "+92" + phoneNumber
        },
        success: function (response) {
            if(typeof response==="string")
            {
                response=JSON.parse(response)
            }
            document.getElementById('loading').style.display = "none";

            if (response.status === 200 || response.status === 201) {

                $.notify({
                    title: '<strong>Note!</strong>',
                    icon: 'fa fa-star',
                    message: "OTP has sent again to your mobile number"
                }, {
                    type: 'info',
                    animate: {
                        enter: 'animated fadeInUp',
                        exit: 'animated fadeOutRight'
                    },
                    placement: {
                        from: "bottom",
                        align: "right"
                    },
                    offset: 20,
                    spacing: 10,
                    z_index: 9999999,
                });
            }
            else if (response.status === 500) {

                alert('Error status 500');
            }
        }, error: function myError(response) {
            document.getElementById('loading').style.display = "none";
            alert(`Request Failed due to ${response.statusText}`);
        }
    });

    //this will set the time duration for which button should be disable
};
/**
 * will change the number of the user
 */

changeNumber=()=>{

    $("#phRow").show();
    $("#otpRow").hide();
    let cookie = document.cookie.split(';');
    let phoneNoValue;
    for (let i = 0; i < cookie.length; i++) {

        let chip = cookie[i],
            entry = chip.split("="),
            name = entry[0];
        name =  name.replace(/\s+/g, '');
        if(name==='phone_no')
        {
            phoneNoValue=entry[1];
        }
    }
    $("#phoneInput").val(phoneNoValue);
};

/**
 * will remove the cookies and logout the user.
 */
logoutMethod=()=>{
    fbq('track', 'Logout');
    let cookie = document.cookie.split(';');

    for (let i = 0; i < cookie.length; i++) {

        let chip = cookie[i],
            entry = chip.split("="),
            name = entry[0];
        if(name!=='logState')
        {
            document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        }
    }
    localStorage.clear();
    $("#beforeLogin").show();
    $("#afterLogin").hide();
};
/**
 * will remove the key that has been responsible for logout from app.
 */
removeLogoutKey=()=>{
    let cookie = document.cookie.split(';');

    for (let i = 0; i < cookie.length; i++) {

        let chip = cookie[i],
            entry = chip.split("="),
            name = entry[0];
        if(name==='logState')
        {
            document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        }
    }

};

/**
 * will change the state of user when logged in
 * @param name
 */

afterLogin=(name)=>{

    $("#beforeLogin").hide();
    $("#afterLogin").show();
    document.getElementById('userName').innerHTML=name;
};
/**
 * Will show error messages notifications.
 * @param msg
 */
showErrorMsg = (msg) => {
    $.notify({
        title: '<strong>Error!</strong>',
        icon: 'fa fa-exclamation-triangle',
        message: msg
    }, {
        type: 'danger',
        animate: {
            enter: 'animated fadeInUp',
            exit: 'animated fadeOutRight'
        },
        placement: {
            from: "bottom",
            align: "right"
        },
        offset: 20,
        spacing: 10,
        z_index: 99999999,
        delay: 3000,
        timer: 100,
    });

};
tokenChecker();